import React from "react";

interface IRating {
  star: number | null;
  className: string | null;
}

const Rating: React.FC<IRating> = ({ star, className }) => {
  return (
    <div className={`flex flex-row ${className} gap-x-0.5`}>
      {[...Array(5)].map((x, i) =>
        i < (star || 0) ? (
          <svg
            key={i}
            width="18"
            height="18"
            viewBox="0 0 18 18"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M9.34111 14.4757C9.13125 14.36 8.88037 14.3599 8.6704 14.4754L5.14981 16.4118C4.6216 16.7023 4.00422 16.2331 4.10512 15.6178L4.77767 11.5162C4.81777 11.2717 4.74019 11.0222 4.57025 10.8491L1.71858 7.94526C1.2907 7.50954 1.52658 6.74968 2.11752 6.66009L6.05152 6.06364C6.28614 6.02807 6.48899 5.87395 6.5939 5.65155L8.35435 1.91987C8.61845 1.36004 9.38155 1.36004 9.64565 1.91987L11.4061 5.65155C11.511 5.87395 11.7139 6.02807 11.9485 6.06364L15.8825 6.66009C16.4734 6.74968 16.7093 7.50954 16.2814 7.94526L13.4298 10.8491C13.2598 11.0222 13.1822 11.2717 13.2223 11.5162L13.8946 15.616C13.9955 16.2316 13.3775 16.7009 12.8493 16.4097L9.34111 14.4757Z"
              fill="#F57F17"
            />
          </svg>
        ) : (
          <svg
            key={i}
            width="18"
            height="18"
            viewBox="0 0 18 18"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M9 1.5C9.19943 1.5 9.38157 1.61863 9.46984 1.80602L11.5037 6.12402L16.0512 6.81456C16.2487 6.84455 16.4127 6.98945 16.4744 7.1883C16.536 7.38714 16.4845 7.6054 16.3415 7.75123L13.0461 11.1122L13.8232 15.8582C13.8569 16.0643 13.776 16.2725 13.6145 16.3953C13.4531 16.5181 13.239 16.5342 13.0625 16.4367L9.00461 14.1962L4.93706 16.4369C4.76053 16.5342 4.54662 16.518 4.38527 16.3952C4.22393 16.2723 4.14312 16.0642 4.17684 15.8582L4.95386 11.1122L1.6585 7.75123C1.51552 7.6054 1.464 7.38714 1.52563 7.1883C1.58726 6.98945 1.75133 6.84455 1.9488 6.81456L6.4963 6.12402L8.53017 1.80602C8.61843 1.61863 8.80057 1.5 9 1.5ZM9 3.2894L7.31401 6.86885C7.23766 7.03094 7.09005 7.14326 6.91932 7.16919L3.15116 7.74139L5.88232 10.5269C6.00598 10.653 6.06244 10.8349 6.03326 11.0131L5.38913 14.9475L8.76107 13.0899C8.91387 13.0058 9.09643 13.0058 9.24915 13.0902L12.6107 14.9462L11.9667 11.0131C11.9376 10.8349 11.994 10.653 12.1177 10.5269L14.8488 7.74139L11.0807 7.16919C10.9099 7.14326 10.7623 7.03094 10.686 6.86885L9 3.2894Z"
              fill="#9E9E9E"
            />
          </svg>
        )
      )}
      <p className="text-[#212121] text-sm ml-0.5 font-medium">
        {star?.toFixed(1)}
      </p>
    </div>
  );
};

export default Rating;
